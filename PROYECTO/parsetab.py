
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftLTGTLEGEleftPLUSMINUSleftTIMESDIVIDEMODAND BOOL COMMA DIVIDE ELSE EQ EQUALS FALSE FLOAT FLOAT_NUM FOR GE GT ID IF INT INT_NUM LBRACE LE LPAREN LT MAIN MINUS MOD NE OR PLUS PRINT RBRACE RETURN RPAREN SEMI STRING STRING_LITERAL TIMES TRUE VOID WHILEprograma : funcionesfunciones : funcion funciones\n                 | emptyfuncion : tipo ID funcion_rest\n               | MAIN LPAREN RPAREN bloquefuncion_rest : inicializacion SEMI\n                    | LPAREN parametros RPAREN bloqueparametros : parametro parametros_rest\n                  | emptyparametros_rest : COMMA parametro parametros_rest\n                       | emptyparametro : tipo IDbloque : LBRACE instrucciones RBRACEinstrucciones : instruccion instrucciones\n                     | emptyinstruccion : declaracion SEMI\n                   | asignacion SEMI\n                   | If\n                   | While\n                   | For\n                   | Return\n                   | Printdeclaracion : tipo ID inicializacioninicializacion : EQUALS exp\n                      | emptyasignacion : ID EQUALS expIf : IF LPAREN exp RPAREN bloque ElseElse : ELSE bloque\n            | emptyWhile : WHILE LPAREN exp RPAREN bloqueFor : FOR LPAREN asignacion SEMI exp SEMI asignacion RPAREN bloqueReturn : RETURN exp_opt SEMIexp_opt : exp\n               | emptyPrint : PRINT LPAREN exp RPAREN SEMItipo : INT\n            | FLOAT\n            | BOOL\n            | STRING\n            | VOIDexp : EE : C E_restE_rest : OR C E_rest\n              | emptyC : R C_restC_rest : AND R C_rest\n              | emptyR : T R_restR_rest : EQ T R_rest\n              | NE T R_rest\n              | LT T R_rest\n              | GT T R_rest\n              | LE T R_rest\n              | GE T R_rest\n              | emptyT : F T_restT_rest : PLUS F T_rest\n              | MINUS F T_rest\n              | emptyF : A F_restF_rest : TIMES A F_rest\n              | DIVIDE A F_rest\n              | MOD A F_rest\n              | emptyA : LPAREN exp RPAREN\n         | ID llamada_func\n         | INT_NUM\n         | FLOAT_NUM\n         | STRING_LITERAL\n         | TRUE\n         | FALSEllamada_func : LPAREN lista_args RPAREN\n                    | emptylista_args : exp lista_args_rest\n                  | emptylista_args_rest : COMMA exp lista_args_rest\n                       | emptyempty :'
    
_lr_action_items = {'MAIN':([0,3,15,21,40,91,110,],[6,6,-4,-6,-5,-7,-13,]),'$end':([0,1,2,3,4,12,15,21,40,91,110,],[-78,0,-1,-78,-3,-2,-4,-6,-5,-7,-13,]),'INT':([0,3,15,17,21,40,41,44,75,79,80,81,82,83,91,110,112,113,146,154,155,157,158,160,162,165,],[7,7,-4,7,-6,-5,7,7,7,-18,-19,-20,-21,-22,-7,-13,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'FLOAT':([0,3,15,17,21,40,41,44,75,79,80,81,82,83,91,110,112,113,146,154,155,157,158,160,162,165,],[8,8,-4,8,-6,-5,8,8,8,-18,-19,-20,-21,-22,-7,-13,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'BOOL':([0,3,15,17,21,40,41,44,75,79,80,81,82,83,91,110,112,113,146,154,155,157,158,160,162,165,],[9,9,-4,9,-6,-5,9,9,9,-18,-19,-20,-21,-22,-7,-13,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'STRING':([0,3,15,17,21,40,41,44,75,79,80,81,82,83,91,110,112,113,146,154,155,157,158,160,162,165,],[10,10,-4,10,-6,-5,10,10,10,-18,-19,-20,-21,-22,-7,-13,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'VOID':([0,3,15,17,21,40,41,44,75,79,80,81,82,83,91,110,112,113,146,154,155,157,158,160,162,165,],[11,11,-4,11,-6,-5,11,11,11,-18,-19,-20,-21,-22,-7,-13,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'ID':([5,7,8,9,10,11,18,25,33,41,48,51,54,55,56,57,58,59,62,63,66,67,68,72,75,79,80,81,82,83,84,89,110,112,113,115,116,117,118,122,139,146,151,154,155,157,158,160,161,162,165,],[13,-36,-37,-38,-39,-40,34,46,34,85,34,34,34,34,34,34,34,34,34,34,34,34,34,34,85,-18,-19,-20,-21,-22,114,34,-13,-16,-17,34,34,34,85,34,34,-32,34,-78,-30,-35,-27,-29,85,-28,-31,]),'LPAREN':([6,13,18,33,34,48,51,54,55,56,57,58,59,62,63,66,67,68,72,86,87,88,89,90,115,116,117,122,139,151,],[14,17,33,33,72,33,33,33,33,33,33,33,33,33,33,33,33,33,33,116,117,118,33,122,33,33,33,33,33,33,]),'EQUALS':([13,85,114,],[18,115,18,]),'SEMI':([13,16,19,26,27,28,29,30,31,32,34,35,36,37,38,39,47,49,50,52,53,60,61,64,65,69,71,73,77,78,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,114,119,120,121,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,145,152,156,],[-78,21,-25,-24,-41,-78,-78,-78,-78,-78,-78,-67,-68,-69,-70,-71,-42,-44,-45,-47,-48,-55,-56,-59,-60,-64,-66,-73,112,113,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-65,-78,146,-33,-34,-43,-46,-49,-50,-51,-52,-53,-54,-57,-58,-61,-62,-63,-72,-23,-26,151,157,161,]),'RPAREN':([14,17,22,23,24,27,28,29,30,31,32,34,35,36,37,38,39,43,45,46,47,49,50,52,53,60,61,64,65,69,70,71,72,73,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,147,148,153,163,],[20,-78,42,-78,-9,-41,-78,-78,-78,-78,-78,-78,-67,-68,-69,-70,-71,-8,-11,-12,-42,-44,-45,-47,-48,-55,-56,-59,-60,-64,106,-66,-78,-73,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-65,137,-78,-75,-10,-43,-46,-49,-50,-51,-52,-53,-54,-57,-58,-61,-62,-63,-72,-74,-77,-26,149,150,152,-78,-76,164,]),'INT_NUM':([18,33,48,51,54,55,56,57,58,59,62,63,66,67,68,72,89,115,116,117,122,139,151,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FLOAT_NUM':([18,33,48,51,54,55,56,57,58,59,62,63,66,67,68,72,89,115,116,117,122,139,151,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'STRING_LITERAL':([18,33,48,51,54,55,56,57,58,59,62,63,66,67,68,72,89,115,116,117,122,139,151,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TRUE':([18,33,48,51,54,55,56,57,58,59,62,63,66,67,68,72,89,115,116,117,122,139,151,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'FALSE':([18,33,48,51,54,55,56,57,58,59,62,63,66,67,68,72,89,115,116,117,122,139,151,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'LBRACE':([20,42,149,150,159,164,],[41,41,41,41,41,41,]),'COMMA':([23,27,28,29,30,31,32,34,35,36,37,38,39,46,47,49,50,52,53,60,61,64,65,69,71,73,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,124,125,126,127,128,129,130,131,132,133,134,135,136,137,148,],[44,-41,-78,-78,-78,-78,-78,-78,-67,-68,-69,-70,-71,-12,-42,-44,-45,-47,-48,-55,-56,-59,-60,-64,-66,-73,44,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-65,139,-43,-46,-49,-50,-51,-52,-53,-54,-57,-58,-61,-62,-63,-72,139,]),'OR':([28,29,30,31,32,34,35,36,37,38,39,50,52,53,60,61,64,65,69,71,73,93,94,95,96,97,98,99,100,101,102,103,104,105,106,125,126,127,128,129,130,131,132,133,134,135,136,137,],[48,-78,-78,-78,-78,-78,-67,-68,-69,-70,-71,-45,-47,-48,-55,-56,-59,-60,-64,-66,-73,48,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-65,-46,-49,-50,-51,-52,-53,-54,-57,-58,-61,-62,-63,-72,]),'AND':([29,30,31,32,34,35,36,37,38,39,53,60,61,64,65,69,71,73,94,95,96,97,98,99,100,101,102,103,104,105,106,126,127,128,129,130,131,132,133,134,135,136,137,],[51,-78,-78,-78,-78,-67,-68,-69,-70,-71,-48,-55,-56,-59,-60,-64,-66,-73,51,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-65,-49,-50,-51,-52,-53,-54,-57,-58,-61,-62,-63,-72,]),'EQ':([30,31,32,34,35,36,37,38,39,61,64,65,69,71,73,95,96,97,98,99,100,101,102,103,104,105,106,132,133,134,135,136,137,],[54,-78,-78,-78,-67,-68,-69,-70,-71,-56,-59,-60,-64,-66,-73,54,54,54,54,54,54,-78,-78,-78,-78,-78,-65,-57,-58,-61,-62,-63,-72,]),'NE':([30,31,32,34,35,36,37,38,39,61,64,65,69,71,73,95,96,97,98,99,100,101,102,103,104,105,106,132,133,134,135,136,137,],[55,-78,-78,-78,-67,-68,-69,-70,-71,-56,-59,-60,-64,-66,-73,55,55,55,55,55,55,-78,-78,-78,-78,-78,-65,-57,-58,-61,-62,-63,-72,]),'LT':([30,31,32,34,35,36,37,38,39,61,64,65,69,71,73,95,96,97,98,99,100,101,102,103,104,105,106,132,133,134,135,136,137,],[56,-78,-78,-78,-67,-68,-69,-70,-71,-56,-59,-60,-64,-66,-73,56,56,56,56,56,56,-78,-78,-78,-78,-78,-65,-57,-58,-61,-62,-63,-72,]),'GT':([30,31,32,34,35,36,37,38,39,61,64,65,69,71,73,95,96,97,98,99,100,101,102,103,104,105,106,132,133,134,135,136,137,],[57,-78,-78,-78,-67,-68,-69,-70,-71,-56,-59,-60,-64,-66,-73,57,57,57,57,57,57,-78,-78,-78,-78,-78,-65,-57,-58,-61,-62,-63,-72,]),'LE':([30,31,32,34,35,36,37,38,39,61,64,65,69,71,73,95,96,97,98,99,100,101,102,103,104,105,106,132,133,134,135,136,137,],[58,-78,-78,-78,-67,-68,-69,-70,-71,-56,-59,-60,-64,-66,-73,58,58,58,58,58,58,-78,-78,-78,-78,-78,-65,-57,-58,-61,-62,-63,-72,]),'GE':([30,31,32,34,35,36,37,38,39,61,64,65,69,71,73,95,96,97,98,99,100,101,102,103,104,105,106,132,133,134,135,136,137,],[59,-78,-78,-78,-67,-68,-69,-70,-71,-56,-59,-60,-64,-66,-73,59,59,59,59,59,59,-78,-78,-78,-78,-78,-65,-57,-58,-61,-62,-63,-72,]),'PLUS':([31,32,34,35,36,37,38,39,65,69,71,73,101,102,103,104,105,106,134,135,136,137,],[62,-78,-78,-67,-68,-69,-70,-71,-60,-64,-66,-73,62,62,-78,-78,-78,-65,-61,-62,-63,-72,]),'MINUS':([31,32,34,35,36,37,38,39,65,69,71,73,101,102,103,104,105,106,134,135,136,137,],[63,-78,-78,-67,-68,-69,-70,-71,-60,-64,-66,-73,63,63,-78,-78,-78,-65,-61,-62,-63,-72,]),'TIMES':([32,34,35,36,37,38,39,71,73,103,104,105,106,137,],[66,-78,-67,-68,-69,-70,-71,-66,-73,66,66,66,-65,-72,]),'DIVIDE':([32,34,35,36,37,38,39,71,73,103,104,105,106,137,],[67,-78,-67,-68,-69,-70,-71,-66,-73,67,67,67,-65,-72,]),'MOD':([32,34,35,36,37,38,39,71,73,103,104,105,106,137,],[68,-78,-67,-68,-69,-70,-71,-66,-73,68,68,68,-65,-72,]),'RBRACE':([41,74,75,76,79,80,81,82,83,110,111,112,113,146,154,155,157,158,160,162,165,],[-78,110,-78,-15,-18,-19,-20,-21,-22,-13,-14,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'IF':([41,75,79,80,81,82,83,110,112,113,146,154,155,157,158,160,162,165,],[86,86,-18,-19,-20,-21,-22,-13,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'WHILE':([41,75,79,80,81,82,83,110,112,113,146,154,155,157,158,160,162,165,],[87,87,-18,-19,-20,-21,-22,-13,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'FOR':([41,75,79,80,81,82,83,110,112,113,146,154,155,157,158,160,162,165,],[88,88,-18,-19,-20,-21,-22,-13,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'RETURN':([41,75,79,80,81,82,83,110,112,113,146,154,155,157,158,160,162,165,],[89,89,-18,-19,-20,-21,-22,-13,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'PRINT':([41,75,79,80,81,82,83,110,112,113,146,154,155,157,158,160,162,165,],[90,90,-18,-19,-20,-21,-22,-13,-16,-17,-32,-78,-30,-35,-27,-29,-28,-31,]),'ELSE':([110,154,],[-13,159,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'funciones':([0,3,],[2,12,]),'funcion':([0,3,],[3,3,]),'empty':([0,3,13,17,23,28,29,30,31,32,34,41,72,75,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,114,148,154,],[4,4,19,24,45,49,52,60,64,69,73,76,109,76,121,45,49,52,60,60,60,60,60,60,64,64,69,69,69,140,19,140,160,]),'tipo':([0,3,17,41,44,75,],[5,5,25,84,25,84,]),'funcion_rest':([13,],[15,]),'inicializacion':([13,114,],[16,141,]),'parametros':([17,],[22,]),'parametro':([17,44,],[23,92,]),'exp':([18,33,72,89,115,116,117,122,139,151,],[26,70,108,120,142,143,144,147,148,156,]),'E':([18,33,72,89,115,116,117,122,139,151,],[27,27,27,27,27,27,27,27,27,27,]),'C':([18,33,48,72,89,115,116,117,122,139,151,],[28,28,93,28,28,28,28,28,28,28,28,]),'R':([18,33,48,51,72,89,115,116,117,122,139,151,],[29,29,29,94,29,29,29,29,29,29,29,29,]),'T':([18,33,48,51,54,55,56,57,58,59,72,89,115,116,117,122,139,151,],[30,30,30,30,95,96,97,98,99,100,30,30,30,30,30,30,30,30,]),'F':([18,33,48,51,54,55,56,57,58,59,62,63,72,89,115,116,117,122,139,151,],[31,31,31,31,31,31,31,31,31,31,101,102,31,31,31,31,31,31,31,31,]),'A':([18,33,48,51,54,55,56,57,58,59,62,63,66,67,68,72,89,115,116,117,122,139,151,],[32,32,32,32,32,32,32,32,32,32,32,32,103,104,105,32,32,32,32,32,32,32,32,]),'bloque':([20,42,149,150,159,164,],[40,91,154,155,162,165,]),'parametros_rest':([23,92,],[43,123,]),'E_rest':([28,93,],[47,124,]),'C_rest':([29,94,],[50,125,]),'R_rest':([30,95,96,97,98,99,100,],[53,126,127,128,129,130,131,]),'T_rest':([31,101,102,],[61,132,133,]),'F_rest':([32,103,104,105,],[65,134,135,136,]),'llamada_func':([34,],[71,]),'instrucciones':([41,75,],[74,111,]),'instruccion':([41,75,],[75,75,]),'declaracion':([41,75,],[77,77,]),'asignacion':([41,75,118,161,],[78,78,145,163,]),'If':([41,75,],[79,79,]),'While':([41,75,],[80,80,]),'For':([41,75,],[81,81,]),'Return':([41,75,],[82,82,]),'Print':([41,75,],[83,83,]),'lista_args':([72,],[107,]),'exp_opt':([89,],[119,]),'lista_args_rest':([108,148,],[138,153,]),'Else':([154,],[158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> funciones','programa',1,'p_programa','Parser.py',15),
  ('funciones -> funcion funciones','funciones',2,'p_funciones','Parser.py',19),
  ('funciones -> empty','funciones',1,'p_funciones','Parser.py',20),
  ('funcion -> tipo ID funcion_rest','funcion',3,'p_funcion','Parser.py',27),
  ('funcion -> MAIN LPAREN RPAREN bloque','funcion',4,'p_funcion','Parser.py',28),
  ('funcion_rest -> inicializacion SEMI','funcion_rest',2,'p_funcion_rest','Parser.py',35),
  ('funcion_rest -> LPAREN parametros RPAREN bloque','funcion_rest',4,'p_funcion_rest','Parser.py',36),
  ('parametros -> parametro parametros_rest','parametros',2,'p_parametros','Parser.py',43),
  ('parametros -> empty','parametros',1,'p_parametros','Parser.py',44),
  ('parametros_rest -> COMMA parametro parametros_rest','parametros_rest',3,'p_parametros_rest','Parser.py',51),
  ('parametros_rest -> empty','parametros_rest',1,'p_parametros_rest','Parser.py',52),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',59),
  ('bloque -> LBRACE instrucciones RBRACE','bloque',3,'p_bloque','Parser.py',63),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones','Parser.py',67),
  ('instrucciones -> empty','instrucciones',1,'p_instrucciones','Parser.py',68),
  ('instruccion -> declaracion SEMI','instruccion',2,'p_instruccion','Parser.py',75),
  ('instruccion -> asignacion SEMI','instruccion',2,'p_instruccion','Parser.py',76),
  ('instruccion -> If','instruccion',1,'p_instruccion','Parser.py',77),
  ('instruccion -> While','instruccion',1,'p_instruccion','Parser.py',78),
  ('instruccion -> For','instruccion',1,'p_instruccion','Parser.py',79),
  ('instruccion -> Return','instruccion',1,'p_instruccion','Parser.py',80),
  ('instruccion -> Print','instruccion',1,'p_instruccion','Parser.py',81),
  ('declaracion -> tipo ID inicializacion','declaracion',3,'p_declaracion','Parser.py',85),
  ('inicializacion -> EQUALS exp','inicializacion',2,'p_inicializacion','Parser.py',89),
  ('inicializacion -> empty','inicializacion',1,'p_inicializacion','Parser.py',90),
  ('asignacion -> ID EQUALS exp','asignacion',3,'p_asignacion','Parser.py',97),
  ('If -> IF LPAREN exp RPAREN bloque Else','If',6,'p_If','Parser.py',101),
  ('Else -> ELSE bloque','Else',2,'p_Else','Parser.py',105),
  ('Else -> empty','Else',1,'p_Else','Parser.py',106),
  ('While -> WHILE LPAREN exp RPAREN bloque','While',5,'p_While','Parser.py',113),
  ('For -> FOR LPAREN asignacion SEMI exp SEMI asignacion RPAREN bloque','For',9,'p_For','Parser.py',117),
  ('Return -> RETURN exp_opt SEMI','Return',3,'p_Return','Parser.py',121),
  ('exp_opt -> exp','exp_opt',1,'p_exp_opt','Parser.py',125),
  ('exp_opt -> empty','exp_opt',1,'p_exp_opt','Parser.py',126),
  ('Print -> PRINT LPAREN exp RPAREN SEMI','Print',5,'p_Print','Parser.py',130),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',134),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',135),
  ('tipo -> BOOL','tipo',1,'p_tipo','Parser.py',136),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',137),
  ('tipo -> VOID','tipo',1,'p_tipo','Parser.py',138),
  ('exp -> E','exp',1,'p_exp','Parser.py',142),
  ('E -> C E_rest','E',2,'p_E','Parser.py',146),
  ('E_rest -> OR C E_rest','E_rest',3,'p_E_rest','Parser.py',153),
  ('E_rest -> empty','E_rest',1,'p_E_rest','Parser.py',154),
  ('C -> R C_rest','C',2,'p_C','Parser.py',164),
  ('C_rest -> AND R C_rest','C_rest',3,'p_C_rest','Parser.py',171),
  ('C_rest -> empty','C_rest',1,'p_C_rest','Parser.py',172),
  ('R -> T R_rest','R',2,'p_R','Parser.py',182),
  ('R_rest -> EQ T R_rest','R_rest',3,'p_R_rest','Parser.py',189),
  ('R_rest -> NE T R_rest','R_rest',3,'p_R_rest','Parser.py',190),
  ('R_rest -> LT T R_rest','R_rest',3,'p_R_rest','Parser.py',191),
  ('R_rest -> GT T R_rest','R_rest',3,'p_R_rest','Parser.py',192),
  ('R_rest -> LE T R_rest','R_rest',3,'p_R_rest','Parser.py',193),
  ('R_rest -> GE T R_rest','R_rest',3,'p_R_rest','Parser.py',194),
  ('R_rest -> empty','R_rest',1,'p_R_rest','Parser.py',195),
  ('T -> F T_rest','T',2,'p_T','Parser.py',205),
  ('T_rest -> PLUS F T_rest','T_rest',3,'p_T_rest','Parser.py',212),
  ('T_rest -> MINUS F T_rest','T_rest',3,'p_T_rest','Parser.py',213),
  ('T_rest -> empty','T_rest',1,'p_T_rest','Parser.py',214),
  ('F -> A F_rest','F',2,'p_F','Parser.py',224),
  ('F_rest -> TIMES A F_rest','F_rest',3,'p_F_rest','Parser.py',231),
  ('F_rest -> DIVIDE A F_rest','F_rest',3,'p_F_rest','Parser.py',232),
  ('F_rest -> MOD A F_rest','F_rest',3,'p_F_rest','Parser.py',233),
  ('F_rest -> empty','F_rest',1,'p_F_rest','Parser.py',234),
  ('A -> LPAREN exp RPAREN','A',3,'p_A','Parser.py',244),
  ('A -> ID llamada_func','A',2,'p_A','Parser.py',245),
  ('A -> INT_NUM','A',1,'p_A','Parser.py',246),
  ('A -> FLOAT_NUM','A',1,'p_A','Parser.py',247),
  ('A -> STRING_LITERAL','A',1,'p_A','Parser.py',248),
  ('A -> TRUE','A',1,'p_A','Parser.py',249),
  ('A -> FALSE','A',1,'p_A','Parser.py',250),
  ('llamada_func -> LPAREN lista_args RPAREN','llamada_func',3,'p_llamada_func','Parser.py',264),
  ('llamada_func -> empty','llamada_func',1,'p_llamada_func','Parser.py',265),
  ('lista_args -> exp lista_args_rest','lista_args',2,'p_lista_args','Parser.py',272),
  ('lista_args -> empty','lista_args',1,'p_lista_args','Parser.py',273),
  ('lista_args_rest -> COMMA exp lista_args_rest','lista_args_rest',3,'p_lista_args_rest','Parser.py',280),
  ('lista_args_rest -> empty','lista_args_rest',1,'p_lista_args_rest','Parser.py',281),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',288),
]
